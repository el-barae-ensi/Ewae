{"ast":null,"code":"var _jsxFileName = \"/home/yasser-zbook/Projects/Ewae/frontend/my-app/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // User roles constants\n  const USER_ROLES = {\n    AGENT_SECURITE: 'agent_securite',\n    GROUPE_ASSOCIATIF: 'groupe_associatif',\n    PUBLIC: 'public',\n    GESTION_PERSONA: 'gestion_persona',\n    TWAA: 'twaa'\n  };\n\n  // Check if user is authenticated on app start\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const userData = localStorage.getItem('ewae_user');\n        const token = localStorage.getItem('ewae_token');\n        if (userData && token) {\n          setUser(JSON.parse(userData));\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        localStorage.removeItem('ewae_user');\n        localStorage.removeItem('ewae_token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    setIsLoading(true);\n    try {\n      // TODO: Replace with actual API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n\n      // Store user data and token\n      localStorage.setItem('ewae_user', JSON.stringify(data.user));\n      localStorage.setItem('ewae_token', data.token);\n      setUser(data.user);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n\n      // For demo purposes, simulate login with different roles\n      const mockUser = getMockUser(credentials.username);\n      if (mockUser) {\n        localStorage.setItem('ewae_user', JSON.stringify(mockUser));\n        localStorage.setItem('ewae_token', 'mock_token_' + Date.now());\n        setUser(mockUser);\n        return {\n          success: true,\n          user: mockUser\n        };\n      }\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('ewae_user');\n    localStorage.removeItem('ewae_token');\n    setUser(null);\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const hasAnyRole = roles => {\n    return user && roles.includes(user.role);\n  };\n\n  // Mock user data for demo purposes\n  const getMockUser = username => {\n    const mockUsers = {\n      'agent': {\n        id: 1,\n        username: 'agent',\n        name: 'Agent de Sécurité',\n        email: 'agent@ewae.ma',\n        role: USER_ROLES.AGENT_SECURITE,\n        permissions: ['view_associations', 'filter_associations', 'view_residents', 'filter_residents', 'contact_associations', 'generate_notifications', 'generate_reports', 'manage_alerts']\n      },\n      'associative': {\n        id: 2,\n        username: 'associative',\n        name: 'Groupe Associatif',\n        email: 'groupe@ewae.ma',\n        role: USER_ROLES.GROUPE_ASSOCIATIF,\n        permissions: ['manage_association_accounts', 'validate_funding_requests', 'manage_complaints', 'generate_activity_reports', 'contact_associations']\n      },\n      'public': {\n        id: 3,\n        username: 'public',\n        name: 'Utilisateur Public',\n        email: 'public@ewae.ma',\n        role: USER_ROLES.PUBLIC,\n        permissions: ['add_declaration', 'view_partners', 'add_donation']\n      },\n      'persona': {\n        id: 4,\n        username: 'persona',\n        name: 'Gestión Persona',\n        email: 'persona@ewae.ma',\n        role: USER_ROLES.GESTION_PERSONA,\n        permissions: ['consult_person', 'manage_residents', 'search_residents', 'manage_pensionarios']\n      },\n      'twaa': {\n        id: 5,\n        username: 'twaa',\n        name: 'Administrateur Twaa',\n        email: 'twaa@ewae.ma',\n        role: USER_ROLES.TWAA,\n        permissions: ['manage_donations', 'view_statistics', 'manage_documents', 'consult_resources', 'consult_agents', 'manage_detainees', 'receive_notifications', 'contact_province', 'manage_police']\n      }\n    };\n    return mockUsers[username] || null;\n  };\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    hasRole,\n    hasAnyRole,\n    USER_ROLES\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","undefined","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","USER_ROLES","AGENT_SECURITE","GROUPE_ASSOCIATIF","PUBLIC","GESTION_PERSONA","TWAA","checkAuth","userData","localStorage","getItem","token","JSON","parse","error","console","removeItem","login","credentials","response","fetch","method","headers","body","stringify","ok","data","json","setItem","success","mockUser","getMockUser","username","Date","now","message","logout","hasRole","role","hasAnyRole","roles","includes","mockUsers","id","name","email","permissions","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yasser-zbook/Projects/Ewae/frontend/my-app/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // User roles constants\n  const USER_ROLES = {\n    AGENT_SECURITE: 'agent_securite',\n    GROUPE_ASSOCIATIF: 'groupe_associatif',\n    PUBLIC: 'public',\n    GESTION_PERSONA: 'gestion_persona',\n    TWAA: 'twaa'\n  };\n\n  // Check if user is authenticated on app start\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const userData = localStorage.getItem('ewae_user');\n        const token = localStorage.getItem('ewae_token');\n\n        if (userData && token) {\n          setUser(JSON.parse(userData));\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        localStorage.removeItem('ewae_user');\n        localStorage.removeItem('ewae_token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    setIsLoading(true);\n    try {\n      // TODO: Replace with actual API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n\n      const data = await response.json();\n\n      // Store user data and token\n      localStorage.setItem('ewae_user', JSON.stringify(data.user));\n      localStorage.setItem('ewae_token', data.token);\n\n      setUser(data.user);\n      return { success: true, user: data.user };\n    } catch (error) {\n      console.error('Login error:', error);\n\n      // For demo purposes, simulate login with different roles\n      const mockUser = getMockUser(credentials.username);\n      if (mockUser) {\n        localStorage.setItem('ewae_user', JSON.stringify(mockUser));\n        localStorage.setItem('ewae_token', 'mock_token_' + Date.now());\n        setUser(mockUser);\n        return { success: true, user: mockUser };\n      }\n\n      return { success: false, error: error.message };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('ewae_user');\n    localStorage.removeItem('ewae_token');\n    setUser(null);\n  };\n\n  const hasRole = (role) => {\n    return user && user.role === role;\n  };\n\n  const hasAnyRole = (roles) => {\n    return user && roles.includes(user.role);\n  };\n\n  // Mock user data for demo purposes\n  const getMockUser = (username) => {\n    const mockUsers = {\n      'agent': {\n        id: 1,\n        username: 'agent',\n        name: 'Agent de Sécurité',\n        email: 'agent@ewae.ma',\n        role: USER_ROLES.AGENT_SECURITE,\n        permissions: [\n          'view_associations',\n          'filter_associations',\n          'view_residents',\n          'filter_residents',\n          'contact_associations',\n          'generate_notifications',\n          'generate_reports',\n          'manage_alerts'\n        ]\n      },\n      'associative': {\n        id: 2,\n        username: 'associative',\n        name: 'Groupe Associatif',\n        email: 'groupe@ewae.ma',\n        role: USER_ROLES.GROUPE_ASSOCIATIF,\n        permissions: [\n          'manage_association_accounts',\n          'validate_funding_requests',\n          'manage_complaints',\n          'generate_activity_reports',\n          'contact_associations'\n        ]\n      },\n      'public': {\n        id: 3,\n        username: 'public',\n        name: 'Utilisateur Public',\n        email: 'public@ewae.ma',\n        role: USER_ROLES.PUBLIC,\n        permissions: [\n          'add_declaration',\n          'view_partners',\n          'add_donation'\n        ]\n      },\n      'persona': {\n        id: 4,\n        username: 'persona',\n        name: 'Gestión Persona',\n        email: 'persona@ewae.ma',\n        role: USER_ROLES.GESTION_PERSONA,\n        permissions: [\n          'consult_person',\n          'manage_residents',\n          'search_residents',\n          'manage_pensionarios'\n        ]\n      },\n      'twaa': {\n        id: 5,\n        username: 'twaa',\n        name: 'Administrateur Twaa',\n        email: 'twaa@ewae.ma',\n        role: USER_ROLES.TWAA,\n        permissions: [\n          'manage_donations',\n          'view_statistics',\n          'manage_documents',\n          'consult_resources',\n          'consult_agents',\n          'manage_detainees',\n          'receive_notifications',\n          'contact_province',\n          'manage_police'\n        ]\n      }\n    };\n\n    return mockUsers[username] || null;\n  };\n\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    hasRole,\n    hasAnyRole,\n    USER_ROLES\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}